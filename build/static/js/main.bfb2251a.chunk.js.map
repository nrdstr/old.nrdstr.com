{"version":3,"sources":["state/index.js","Logo.js","Background.js","utils/index.js","App.js","serviceWorker.js","index.js","reducers/index.js"],"names":["StateContext","createContext","StateProvider","reducer","initialState","children","Provider","value","useReducer","Logo","props","className","border","id","xmlns","viewBox","dataname","d","transform","data-name","Background","useContext","shapesData","dispatch","numberOfShapes","Math","floor","random","window","innerWidth","shapes","colors","initShapes","numb","data","Array","from","val","index","shapesArr","forEach","shape","push","class","length","style","top","ceil","innerHeight","left","type","payload","clearInterval","handleAnimation","rand","el","document","querySelector","classList","add","setTimeout","remove","useEffect","setInterval","map","i","key","onClick","changeColor","min","max","step1","step2","randNum","App","useState","logoBorder","setLogoBorder","color","Boolean","location","hostname","match","ReactDOM","render","StrictMode","loading","state","action","drafts","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.bfb2251a.chunk.js","sourcesContent":["import React, { createContext, useContext, useReducer } from \"react\"\n\nexport const StateContext = createContext()\n\nexport const initialState = {\n    shapesData: [],\n    loading: false\n}\n\nexport const StateProvider = ({ reducer, initialState, children }) => (\n    <StateContext.Provider value={useReducer(reducer, initialState)}>\n        {children}\n    </StateContext.Provider>\n)\n\nexport const useStateValue = () => useContext(StateContext)\n","import React from 'react'\n\nconst Logo = props => {\n    return (\n        <div className={`logo-container ${props.border}`}>\n            <svg className='logo' id=\"nrdstr.\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 1755.53 528.27\"><g id=\"_.\" dataname=\".\"><path className=\"cls-1\" d=\"M1792,1264.13v-91.29h85.8v91.29Z\" transform=\"translate(-122.23 -735.87)\" /></g><g id=\"r\"><path className=\"cls-1\" d=\"M1836.64,972c.36-.35.74-.67,1.11-1a137,137,0,0,0-63.49-15.62c-30.66,0-62,13.93-85.72,34.84l-13.94-26.48h-71.08v300.37h87.81V1115c0-43.21,30.67-81.54,72.48-81.54a65.61,65.61,0,0,1,27.71,6.1A176.75,176.75,0,0,1,1836.64,972Z\" transform=\"translate(-122.23 -735.87)\" /></g><g id=\"t\"><path className=\"cls-1\" d=\"M1570.44,963.76v81.54h-69.69v218.83H1415V1045.3h-65.45V963.76h62.72V852.25h88.51V963.76Z\" transform=\"translate(-122.23 -735.87)\" /></g><g id=\"s\"><path className=\"cls-1\" d=\"M1122.83,1151.57c43.91,50.18,111.11,52.27,111.11,14.64,0-22.3-21.9-29.27-44.21-36.24-58.54-18.12-92.37-36.24-92.37-94.09,0-55.05,42.89-91.29,100-91.29,51.57,0,79.45,11.15,119.87,35.54l-40.42,63.42c-58.54-41.82-98.27-38.33-102.45-6.27-3.48,22.3,29.27,26.48,64.12,38.33,42.51,12.54,82.24,41.12,82.24,92.69,0,48.09-49.49,94.08-110.82,94.08-54.35,0-99.33-17.42-136.27-54.36Z\" transform=\"translate(-122.23 -735.87)\" /></g><g id=\"d\"><path className=\"cls-1\" d=\"M955.93,1218.84a160,160,0,0,1-111.51,45.29c-87.82,0-158.9-71.08-158.9-159.59,0-87.81,71.08-159.6,158.9-159.6a160,160,0,0,1,111.51,45.3V735.87h82.23v527.81H955.93Zm-155.42-56.46a75.39,75.39,0,0,0,55.06,23.7,76.91,76.91,0,0,0,55.75-23.7,84.1,84.1,0,0,0,23-57.84c0-21.61-8.36-41.82-23-57.84a76.91,76.91,0,0,0-55.75-23.7,75.39,75.39,0,0,0-55.06,23.7c-14.63,16-23,36.23-23,57.84A84.15,84.15,0,0,0,800.51,1162.38Z\" transform=\"translate(-122.23 -735.87)\" /></g><g id=\"r-2\" data-name=\"r\"><path className=\"cls-1\" d=\"M700.46,972l3.85-3.74c-24.24-8.06-38.06-12.89-60.76-12.89-25.29,0-62,13.93-85.72,34.84l-13.94-26.48H472.81v300.37h87.81V1115c0-43.21,30.66-81.54,72.48-81.54a65.61,65.61,0,0,1,27.71,6.1C667.57,1015.28,684.51,986.91,700.46,972Z\" transform=\"translate(-122.23 -735.87)\" /></g><g id=\"n\"><path className=\"cls-1\" d=\"M207.26,990.24C231,969.33,262.32,955.4,293,955.4c80.84,0,147,71.08,147,159.59v149.14H355V1115c0-43.21-50.7-81.54-77.95-81.54-41.81,0-67,38.33-67,81.54v149.14H122.23V963.76h71.09Z\" transform=\"translate(-122.23 -735.87)\" /></g><path className=\"cls-1\" d=\"M1266.68,1098.65\" transform=\"translate(-122.23 -735.87)\" /></svg>\n        </div>\n    )\n}\n\nexport default Logo","import React, { useEffect } from 'react'\nimport { useStateValue } from \"./state\"\nimport { createSequence } from './utils'\n\n\nconst Background = props => {\n    const [{ shapesData }, dispatch] = useStateValue()\n\n    const numberOfShapes = Math.floor(Math.random() * (window.innerWidth / 30 - 50) + 50)\n    const shapes = ['square', 'circle', 'half-circle', 'zig-zag', 'triangle']\n    const colors = ['color-1', 'color-2', 'color-3', 'color-4']\n\n    // const createSequence = (numb) => Array.from(new Array(numb), (val, index) => index + 1)\n\n    const initShapes = () => {\n        const data = createSequence(numberOfShapes)\n        const shapesArr = []\n        data.forEach(shape => {\n            shapesArr.push({\n                class: `shape ${shapes[Math.floor(Math.random() * shapes.length)]} ${colors[Math.floor(Math.random() * colors.length)]}`,\n                style: {\n                    top: Math.ceil(Math.floor(Math.random() * (window.innerHeight)) / 50) * 50,\n                    left: Math.ceil(Math.floor(Math.random() * (window.innerWidth)) / 50) * 50,\n                    transform: `rotate(${Math.floor(Math.random() * (360))}deg)`\n                }\n            })\n        })\n        dispatch({\n            type: 'shapesData',\n            payload: shapesArr\n        })\n        clearInterval(handleAnimation)\n    }\n\n    const randNum = (min, max) => {\n        let step1 = max - min + 1\n        let step2 = Math.random() * step1\n        let result = Math.floor(step2) + min\n        return result\n    }\n\n    const repositionShapes = () => {\n        const shapesArr = []\n        shapesData.forEach((shape, i) => {\n            shapesArr.push({\n                class: shapesData[i].class,\n                style: {\n                    top: Math.ceil(Math.floor(Math.random() * (window.innerHeight)) / 50) * 50,\n                    left: Math.ceil(Math.floor(Math.random() * (window.innerWidth)) / 50) * 50,\n                    transform: `rotate(${Math.floor(Math.random() * (360))}deg)`\n                }\n            })\n        })\n        dispatch({\n            type: 'shapesData',\n            payload: shapesArr\n        })\n        props.changeColor(colors[randNum(0, colors.length)])\n        clearInterval(handleAnimation)\n    }\n\n    const handleAnimation = () => {\n        const rand = Math.floor(Math.random() * numberOfShapes - 1)\n        const el = document.querySelector(`#shape-${rand}`)\n        if (el && el.classList) {\n            el.classList.add('animate--jump')\n            setTimeout(() => {\n                el.classList.remove('animate--jump')\n            }, 233)\n        }\n    }\n\n    useEffect(() => {\n        initShapes()\n        setInterval(handleAnimation, 466)\n    }, [])\n\n    if (shapesData) {\n        return (\n            <div className='background'>\n                {\n                    shapesData && shapesData.map((shape, i) => {\n                        return (\n                            <div key={i} className='shape-container' style={shape.style}>\n                                <div id={`shape-${i}`} className={shape.class} />\n                            </div>\n                        )\n                    })\n                }\n                <button className='btn' onClick={repositionShapes}>LETS GOOOOO</button>\n            </div>\n        )\n    } else {\n        return 'LOADING...'\n    }\n}\n\nexport default Background","export const createSequence = (numb) => Array.from(new Array(numb), (val, index) => index + 1)","import React, { useState } from 'react'\nimport Logo from './Logo'\nimport Background from './Background'\nimport './App.scss'\n\nfunction App() {\n  const [logoBorder, setLogoBorder] = useState('color-1')\n  const changeBorderColor = color => setLogoBorder(color)\n  return (\n    <div className=\"App\">\n      <Background changeColor={changeBorderColor} />\n      <header className=\"App-header\">\n        <Logo border={logoBorder} />\n      </header>\n    </div>\n  )\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport { StateProvider, initialState } from \"./state\"\nimport { rootReducer } from \"./reducers\"\nimport App from './App'\nimport * as serviceWorker from './serviceWorker'\n\nReactDOM.render(\n  <React.StrictMode>\n    <StateProvider initialState={initialState} reducer={rootReducer}>\n      <App />\n    </StateProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n)\n\nserviceWorker.unregister()\n","export const rootReducer = (state, action) => {\n    switch (action.type) {\n        case \"shapesData\":\n            return {\n                ...state,\n                shapesData: action.payload\n            }\n        case \"loading\":\n            return {\n                ...state,\n                drafts: action.payload\n            }\n        default:\n            return state\n    }\n}"],"sourceRoot":""}